from flask import Flask, render_template, abort, request, redirect, url_for, session,jsonify
import os
import openai
from flask_ngrok import run_with_ngrok
from pyngrok import ngrok
import re
from flask_cors import CORS

port_no = 5000
app = Flask(__name__)
CORS(app)  # Enable CORS for all routes

ngrok.set_auth_token("2PVWz3u3Iry3L3IpmZ1Owt4Sssd_sjkWd2FuyC5s5GBEm64S")
public_url =  ngrok.connect(port_no).public_url

openai.api_key = "PUT_YOUR_API_KEY"

def generate_text(prompt):
    response = openai.Completion.create(
        engine="text-davinci-002",
        prompt=prompt,
        max_tokens=400,
        n=1,
        stop=None,
        temperature=0.7,
    )

    return response.choices[0].text.strip()

@app.route('/')
def hello_world():
  return '<h2>Build Story API<h2>'


@app.route('/build_story/<story>',methods=['POST', 'GET'])
def build_story(story):
    # """
    # Builds a better story by generating new ideas and plot points.
    # """
    prompt = f"Build a better story: {story}"
    suggestion = generate_text(prompt)
    
    suggestion = re.sub("\n","",suggestion)
    response = suggestion

    return jsonify(response)



@app.route('/edit_text/<text>',methods=['POST', 'GET'])
def edit_text(text):

  prompt = f"Correct the following sentence: {text}"

  # Define the GPT-3 model parameters
  model_engine = "text-davinci-002"
  max_tokens = 60
  temperature = 0.5

  # Generate the corrected text using GPT-3
  response = openai.Completion.create(
      engine=model_engine,
      prompt=prompt,
      max_tokens=max_tokens,
      temperature=temperature
  )

  # Extract the corrected text from the GPT-3 response
  corrected_text = response.choices[0].text

  # Remove any extra text generated by GPT-3
  corrected_text = re.sub('Correct the following sentence: |[^\w\s]|\n', '', corrected_text)
  return jsonify(corrected_text)


@app.route('/improve_readability/<text>',methods=['POST', 'GET'])
def improve_readability(text):
    prompt = f"Improve the following sentence: {text}"
    new_sentence = generate_text(prompt)

    new_sentence=re.sub("\n","",new_sentence)
    response = new_sentence

    return jsonify(response)

@app.route('/image/<name>',methods=['POST', 'GET'])
def Image_res(name):

    response = openai.Image.create(
        prompt=name,
        n=1,
        size="256x256",
    )

    restult = response["data"][0]["url"] 
    img_tag = f'<img src="{restult}">'
    return img_tag

print(f"To access the global link, please click {public_url}")

app.run(port=port_no)
    
